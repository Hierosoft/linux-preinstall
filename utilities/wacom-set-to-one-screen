#!/usr/bin/env python3
# See https://github.com/linuxwacom/xf86-input-wacom/wiki/Dual-and-Multi-Monitor-Set-Up-II
from __future__ import print_function
import sys
import os
import shlex

from find_linuxpreinstall import linuxpreinstall

from linuxpreinstall import (
    echo0,
    echo1,
    echo2,
    which,
    profile,
    run_and_get_lists,
)

# TMP_PATH = os.path.join(profile, "tmp")

PRE_MSG = (
    "Using the information above, run the following commands,"
    " but replace {example_device} with your input device listed above,"
    " and replace {output_device} with your output device listed"
    " further up:"
)
POST_MSG = (
    "You only need to run xsetwacom on your wacom inputs"
    " if you have multiple monitors. Doing so will map your digitizing"
    "tablet to that monitor, so that the cursor will move at the same"
    " speed in the x and y direction, given that your tablet's aspect"
    " ratio is the same as your screen's."
)
def main():
    XRANDR = which("xrandr")
    if XRANDR is None:
        echo0("Error: This linux-preinstall utility requires xrandr."
              " You must install the package rst.")
        return 1

    echo1('* using "{}"'.format(XRANDR))
    xrandr_cmd = XRANDR
    xrandr_out, xrandr_err, xrandr_code = run_and_get_lists(xrandr_cmd)
    XSETWACOM = which("xsetwacom")
    if XSETWACOM is None:
        echo0("Error: This linux-preinstall utility requires xsetwacom."
              " You must install the package rst.")
        return 1
    if xrandr_code != 0:
        echo0('Error: "{}" returned code {}'
              ''.format(xrandr_cmd, xrandr_code))
    print(xrandr_out)
    echo0(xrandr_err)
    echo1('* using "{}"'.format(XSETWACOM))

    cmd_parts = ["xsetwacom", "--list"]
    cmd = shlex.join(cmd_parts)
    out, err, code = run_and_get_lists(cmd_parts)
    echo0()
    input_devices = []
    '''
    input_devices = [
        "Wacom Graphire2 4x5 Pen",
        "Wacom Graphire2 4x5 Pen stylus",
        "Wacom Graphire2 4x5 Pen eraser",
        "Wacom Graphire2 4x5 Pen cursor",
    ]
    '''
    known_endings = [
        # Wacom Intuos PT M 2:
        "Pen stylus",
        "Finger touch",
        "Pad pad",
    ]
    for rawL in out:
        line = rawL.strip()
        ender = "id:"
        ender_i = line.find(ender)
        if ender_i < 2:
            echo0('Error: "{}" is missing. The format is unrecognized'
                  ' for the line "{}" in the output of `{}`'
                  ''.format(ender, line, cmd))
            return 1
        input_devices.append(line[:ender_i].strip())
    output_device = "HDMI-1"
    echo0()
    echo0()
    example_device = None
    if len(input_devices) > 0:
        example_device = input_devices[0]

    echo0(PRE_MSG.format(
        example_device=example_device,
        output_device=output_device,
    ))
    echo0()
    for input_device in input_devices:
        echo0('xsetwacom set "{}" MapToOutput {}'
              ''.format(input_device, output_device))
    echo0()
    echo0(POST_MSG)
    echo0()
    echo0()
    # Other method (choose a display and input device): See tablet-map-to-monitor.txt
    return 0


if __name__ == "__main__":
    sys.exit(main())
